# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

resources:
 pipelines:
  - pipeline: buildContosoAir # identifier for the resource used in pipeline resource variables
    source: # name of the pipeline that produces the artifact
    trigger:
      branches:
       include:
         - master

pool:
  vmImage: ubuntu-latest

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '8376ace0-576d-4ee4-ba8c-09752498aae0'
    definition: 'student1-51365101.ContosoAir'
    buildVersionToDownload: 'latest'
    targetPath: '$(Pipeline.Workspace)' 
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure Connection'
    subscriptionId: '583a90b2-c479-4d87-8566-f18937a8f9df'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'rg-lod'
    location: 'Central US'
    templateLocation: 'Linked artifact'
    csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
    csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
    overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
    deploymentMode: 'Incremental'
- task: AzureRmWebAppDeployment@5
  inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure Connection'
        appType: 'webApp'
        WebAppName: '$(web_prefix)-$(web_site)-$(web_environment)'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
